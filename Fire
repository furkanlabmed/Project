def playerfireShell(xy, tankx, tanky, turPost, gun_power, xloc, bar_width, ranHeight, eTankX, eTankY):

fire = True
damage = 0

startShell = list(xy)

print("FIRE!", xy)

while fire:
for event in pygame.event.get():
if event.type == pygame.QUIT:
pygame.quit()
quit()

# print(startingShell[0],startingShell[1])
pygame.draw.circle(game_layout_display, red, (startShell[0], startShell[1]), 5)

startShell[0] -= (12 - turPost) * 2

# y = x**2
startShell[1] += int(
(((startShell[0] - xy[0]) * 0.015 / (gun_power / 50)) ** 2) - (turPost + turPost / (12 - turPost)))

if startShell[1] > display_height - grnd_height:
print("Last shell:", startShell[0], startShell[1])
hit_x = int((startShell[0] * display_height - grnd_height) / startShell[1])
hit_y = int(display_height - grnd_height)
print("Impact:", hit_x, hit_y)

if eTankX + 10 > hit_x > eTankX - 10:
print("Critical Hit!")
damage = 25
elif eTankX + 15 > hit_x > eTankX - 15:
print("Hard Hit!")
damage = 18
elif eTankX + 25 > hit_x > eTankX - 25:
print("Medium Hit")
damage = 20
elif eTankX + 45 > hit_x > eTankX - 35:
print("Low Hit")
damage = 10

explosion(hit_x, hit_y)
fire = False

check_x_1 = startShell[0] <= xloc + bar_width
check_x_2 = startShell[0] >= xloc

check_y_1 = startShell[1] <= display_height
check_y_2 = startShell[1] >= display_height - ranHeight

if check_x_1 and check_x_2 and check_y_1 and check_y_2:
print("Last shell:", startShell[0], startShell[1])
hit_x = int((startShell[0]))
hit_y = int(startShell[1])
print("Impact:", hit_x, hit_y)
explosion(hit_x, hit_y)
fire = False

pygame.display.update()
clock.tick(60)
return damage
